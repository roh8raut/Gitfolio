{"version":3,"sources":["components/placeholder/placeholder.js","components/profile/profile.js","components/repo/repo.js","components/repos/repos.js","components/aboutme/aboutme.js","components/main/main.js","components/app/App.js","serviceWorker.js","index.js"],"names":["Placeholder","props","color","highlightColor","width","height","circle","duration","count","Profile","userObj","className","src","avatar_url","alt","onLoad","e","target","style","display","data-aos","data-aos-duration","login","href","aria-hidden","marginLeft","Repo","repoObj","onClick","window","open","url","name","desc","language","Repos","isLoaded","to","textAlign","map","obj","fork","key","id","repoHolder","i","push","AboutMe","data-aos-delay","Main","useState","userDetails","setUserDetails","repoDetails","setRepoDetails","setIsLoaded","useEffect","AOS","init","fetch","then","res","ok","json","Error","datas","catch","err","user","repo","setTimeout","lists","document","querySelectorAll","finalRepoObj","description","html_url","exact","path","App","console","log","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1f779600.chunk.js","sourcesContent":["import React from 'react';\nimport Skeleton , {SkeletonTheme} from 'react-loading-skeleton';\n\n\nconst Placeholder = (props) =>  {\n    // console.log(\"width\", props.width);\n    \n        return (                                 \n                <SkeletonTheme color=\"#202020\" highlightColor=\"grey\">\n                   <Skeleton width={props.width + \"px\"} height={props.height + \"px\"} circle={props.circle} duration={props.duration} count={props.count}/>\n                </SkeletonTheme>\n        )\n}\n\nexport default Placeholder;\n","import React from 'react';\r\nimport './profile.css';\r\nimport Placeholder from '../placeholder/placeholder';\r\n\r\n\r\nconst Profile = (props) =>  {\r\n  \r\n    const userObj = props.userObj;\r\n    // if(userObj){\r\n        \r\n    return (\r\n        <div className=\"profile-container\">\r\n            <div className=\"content\">\r\n                <div className=\"avatar\">\r\n                    <img src={userObj.avatar_url} alt=\"avatar\" onLoad={(e) => e.target.style.display = \"block\"}/>\r\n                </div>\r\n                <div className=\"content__name\" data-aos=\"fade-dow\" data-aos-duration=\"1000\">\r\n                    <span>{(userObj&&userObj.login) || <Placeholder width=\"100\"/>}</span>                                  \r\n                </div>\r\n                <div className=\"content__link\" data-aos=\"fade-right\" data-aos-duration=\"1200\">\r\n                    <a href=\"https://github.com/roh8raut\">@rohit_raut</a>\r\n                </div>\r\n\r\n                <div className=\"content__addinfo\">\r\n                    <p className=\"content__addinfo--location\" data-aos=\"fade-right\" data-aos-duration=\"1400\">\r\n                        <i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\r\n                        <span>Mumbai</span>\r\n                    </p>\r\n\r\n                    <p className=\"content__addinfo--available\" data-aos=\"fade-right\" data-aos-duration=\"1600\">\r\n                        <i className=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                        <span>Available</span>\r\n                    </p>\r\n\r\n                    <p className=\"content__addinfo--social\" data-aos=\"fade-right\" data-aos-duration=\"1000\">\r\n                        <a href=\"https://twitter.com/wierdorohit123\"><i className=\"fa fa-twitter\" aria-hidden=\"true\"></i></a>\r\n                        <a href=\"https://in.linkedin.com/in/rohitraut1996\"><i style={{marginLeft: 20+\"px\"}} className=\"fa fa-linkedin\" aria-hidden=\"true\"></i></a>\r\n                    </p>\r\n                </div>                               \r\n            </div>\r\n        </div>\r\n    )\r\n    //  } else {\r\n    //     return (<p>Loading....</p>)\r\n    // }\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport './repo.css';\r\nimport Placeholder from '../placeholder/placeholder';\r\n\r\n\r\nconst Repo = (props) =>  {\r\n    const handleClick = () => {\r\n        window.open(props.repoObj.url);\r\n    }\r\n    // console.log(\"repoObj,\", props.repoObj)\r\n    const repoObj = props.repoObj;\r\n        \r\n        return (                                 \r\n               <div className=\"repo__card\" data-aos=\"fade-up\" onClick={handleClick}>\r\n                     <h2>{(repoObj && repoObj.name) || <Placeholder width=\"150\"/>}</h2>\r\n                    <div>{(repoObj && repoObj.desc) || <Placeholder width=\"350\"/>}</div>\r\n                    <div className=\"section-footer\">\r\n                        {\r\n                            (repoObj && repoObj.language) ? \r\n                            <>\r\n                                <i className=\"fa fa-code\" aria-hidden=\"true\"></i>\r\n                                <span style={{marginLeft: 5+\"px\"}}>{repoObj.language}</span> \r\n                                </> :\r\n                            <Placeholder width=\"100\"/>\r\n                        }\r\n                    </div>\r\n               </div>\r\n        )\r\n}\r\n\r\nexport default Repo;","import React from 'react';\r\nimport './repos.css';\r\nimport Repo from '../repo/repo';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Repos = (props) =>  {\r\n   const {repoObj, isLoaded} = props;\r\n   if(isLoaded && repoObj) {\r\n       \r\n    return (\r\n        <>                       \r\n            <div className=\"repos-container\">\r\n                <Link to=\"/\"><div style={{textAlign: \"center\"}}><button className=\"btn aboutBtn\">About</button></div></Link>\r\n                <h1 className=\"work\">Work.</h1>\r\n                <div className=\"repo-container\" data-aos=\"fade-up\" data-aos-duration=\"1200\">\r\n                    {\r\n                        repoObj.map((obj) => {\r\n                            if(!obj.fork){\r\n                                return <Repo key={obj.id} repoObj={obj}/>  \r\n                            }\r\n                            \r\n                        })\r\n                    }                                     \r\n                </div>\r\n                \r\n                <h1 className=\"fork\">Fork.</h1>\r\n                <div className=\"repo-container\">\r\n                    {\r\n                        repoObj.map((obj) => {\r\n                            if(obj.fork){\r\n                                return <Repo key={obj.id} repoObj={obj}/>  \r\n                            }                            \r\n                        }) \r\n                    }                                     \r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n    } \r\n    else {\r\n        var repoHolder = [];\r\n        for(let i = 0; i < 8; i++) {\r\n            repoHolder.push(<Repo key={i}/>)\r\n        }\r\n        \r\n        return (\r\n            \r\n            <div className=\"repos-container\">\r\n                <h1 className=\"work\">Work.</h1>\r\n                <div className=\"repo-container\">                    \r\n                    {repoHolder}\r\n                </div>                \r\n             </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Repos;","import React from 'react';\nimport './aboutme.css';\nimport {Link} from 'react-router-dom';\n\nconst AboutMe = () => {\n\n    return (\n        <div className=\"landing-page\">\n            <h1 className=\"hello\"  data-aos=\"fade-right\" data-aos-duration=\"1000\">Hello! I'm,</h1>\n            <h1 className=\"name\" data-aos=\"fade-right\" data-aos-delay=\"200\" data-aos-duration=\"1500\">Rohit<br/>Raut</h1>\n            <h3 className=\"profession-text\" data-aos=\"fade-right\" data-aos-delay=\"300\" data-aos-duration=\"2000\">- Web Developer</h3>\n            <p className=\"about-me-text-container\">\n                <span className=\"about--me\">-ABOUT ME</span>\n                <span data-aos=\"fade-right\" data-aos-duration=\"2000\">\n                    I'm a Pofessional Web developer. \n                    I have a passion for web development and love to create for web and mobile devices.\n                    I look forward to connect with like minded people, Learn from them and use technology to solve real life problems\n                </span>\n            </p>\n            <Link to=\"/repo\"><div className=\"repoBtnBlock shake\"><button className=\"btn repoBtn\"><span>See my work!!</span></button></div></Link>\n        </div>\n    )\n}\n\nexport default AboutMe;\n","import React, { useState, useEffect } from 'react';\r\nimport Profile from './../profile/profile';\r\nimport Repos from '../repos/repos';\r\nimport './main.css';\r\nimport * as user from '../../stub/user.json';\r\nimport * as repo from '../../stub/repo.json';\r\nimport AboutMe from '../aboutme/aboutme';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css';\r\n \r\nconst Main = (props) =>  {\r\n    const [userDetails, setUserDetails] = useState([]);\r\n    const [repoDetails, setRepoDetails] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    useEffect(() => {\r\n        AOS.init({duration: 1000,});\r\n        fetch(\"https://api.github.com/users/roh8raut\")\r\n            .then((res)  => {\r\n                    if(res.ok) {\r\n                        return res.json();\r\n                    } else {                        \r\n                        throw new Error('Something went wrong');\r\n                    }\r\n            })\r\n            .then((datas) => {\r\n                setUserDetails(datas)\r\n            })\r\n            .catch((err) => {\r\n                setUserDetails(user.default)\r\n            });\r\n\r\n        fetch(\"https://api.github.com/users/roh8raut/repos\")\r\n            .then((res)  => {\r\n                if(res.ok) {\r\n                    return res.json();\r\n                } else {                        \r\n                    throw new Error('Something went wrong');\r\n                }\r\n            })\r\n            .then((datas) => {               \r\n                setRepoDetails(datas)\r\n                setIsLoaded(true);\r\n            })\r\n            .catch((err) => {\r\n                setRepoDetails(repo.default)\r\n                setIsLoaded(true);\r\n            });\r\n\r\n        setTimeout(() => {\r\n            const lists = [...document.querySelectorAll('[class^=\"css-\"]')];\r\n            for (const list of lists) {\r\n                list.style.display = \"none\";\r\n            }\r\n        }, 7000);\r\n                    \r\n    }, []);\r\n\r\n   \r\n    const finalRepoObj = repoDetails.map((repo) => {\r\n        return {name: repo.name, desc: repo.description, url: repo.html_url,language: repo.language, id: repo.id, fork: repo.fork}\r\n    })\r\n    \r\n    return (\r\n        <>\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\"><AboutMe /></Route>\r\n                <Route path=\"/repo\">\r\n                    <div className=\"main-container\">\r\n                        <Profile userObj={userDetails}/>\r\n                        <Repos repoObj={finalRepoObj} isLoaded={isLoaded}/>\r\n                    </div> \r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from '../main/main';\n\nfunction App() {\n  return (\n    <div className=\"App\">        \n        <Main />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nconsole.log(\"service wroker.js\");\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}